apiVersion: apps/v1
kind: Deployment
metadata:
  name: pdf-parser-worker
  labels:
    app: pdf-parser
    component: worker
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pdf-parser
      component: worker
  template:
    metadata:
      labels:
        app: pdf-parser
        component: worker
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - name: worker
        image: ${REGISTRY}/pdf-parser:${TAG}
        imagePullPolicy: Always
        args: ["celery", "-A", "worker.tasks", "worker", "--loglevel=info", "--concurrency=1", "--queues=gpu"]
        resources:
          requests:
            cpu: 1000m
            memory: 4Gi
            nvidia.com/gpu: 1
          limits:
            cpu: 2000m
            memory: 8Gi
            nvidia.com/gpu: 1
        env:
        - name: APP_LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: pdf-parser-config
              key: APP_LOG_LEVEL
        - name: CELERY_QUEUE
          value: "gpu"
        - name: USE_CUDA
          value: "true"
        - name: PDF_CHUNK_SIZE
          valueFrom:
            configMapKeyRef:
              name: pdf-parser-config
              key: PDF_CHUNK_SIZE
        - name: PDF_CHUNK_OVERLAP
          valueFrom:
            configMapKeyRef:
              name: pdf-parser-config
              key: PDF_CHUNK_OVERLAP
        - name: OCR_ENABLED
          valueFrom:
            configMapKeyRef:
              name: pdf-parser-config
              key: OCR_ENABLED
        - name: S3_ENDPOINT_URL
          valueFrom:
            configMapKeyRef:
              name: pdf-parser-config
              key: S3_ENDPOINT_URL
        - name: S3_BUCKET_NAME
          valueFrom:
            configMapKeyRef:
              name: pdf-parser-config
              key: S3_BUCKET_NAME
        - name: S3_REGION
          valueFrom:
            configMapKeyRef:
              name: pdf-parser-config
              key: S3_REGION
        - name: S3_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: pdf-parser-secrets
              key: S3_ACCESS_KEY
        - name: S3_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: pdf-parser-secrets
              key: S3_SECRET_KEY
        - name: CELERY_BROKER_URL
          valueFrom:
            secretKeyRef:
              name: pdf-parser-secrets
              key: CELERY_BROKER_URL
        - name: CELERY_RESULT_BACKEND
          valueFrom:
            secretKeyRef:
              name: pdf-parser-secrets
              key: CELERY_RESULT_BACKEND
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: pdf-parser-secrets
              key: REDIS_URL
        volumeMounts:
        - name: tmp-volume
          mountPath: /app/tmp
      volumes:
      - name: tmp-volume
        emptyDir: {}
      securityContext:
        seccompProfile:
          type: RuntimeDefault
        allowPrivilegeEscalation: false
      nodeSelector:
        gpu: "true" 